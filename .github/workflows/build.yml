name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            build_command: electron:build:linux
            artifact_pattern: "dist-electron/*.AppImage"
            artifact_name: xair-radio-mode-linux
          - os: windows-latest
            platform: windows
            build_command: electron:build:win
            artifact_pattern: "dist-electron/*.exe"
            artifact_name: xair-radio-mode-windows
          - os: macos-latest
            platform: macos
            build_command: electron:build:mac
            artifact_pattern: "dist-electron/*.dmg"
            artifact_name: xair-radio-mode-macos

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install bridge-server dependencies
      run: |
        cd bridge-server
        npm ci

    - name: Build Electron app
      run: npm run ${{ matrix.build_command }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: List build output (Debug)
      run: |
        echo "Contents of dist-electron:"
        ls -la dist-electron/ || echo "dist-electron directory not found"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: |
          ${{ matrix.artifact_pattern }}
          dist-electron/latest*.yml
        retention-days: 30
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List downloaded artifacts (Debug)
      run: |
        echo "Downloaded artifacts:"
        find artifacts -type f -name "*" | head -20

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
        generate_release_notes: true
        body: |
          ## Downloads
          
          ### Windows
          - **Setup (Installer)**: `*-setup.exe`
          - **Portable**: `*-portable.exe`
          
          ### Linux
          - **AppImage**: `*.AppImage`
          
          ### macOS
          - **DMG**: `*.dmg`
          
          ## Installation
          
          ### Windows
          Download and run the setup file, or use the portable version.
          
          ### Linux
          Download the AppImage file, make it executable (`chmod +x *.AppImage`), and run it.
          
          ### macOS
          Download the DMG file, open it, and drag the app to Applications.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
