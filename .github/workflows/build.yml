name: Build X-Air radio App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            build_command: npm run electron:build:linux
            artifact_name: linux-build
            artifact_path: dist-electron/*.AppImage
          - os: windows-latest
            build_command: npm run electron:build:win
            artifact_name: windows-build
            artifact_path: dist-electron/*.exe
          - os: macos-latest
            build_command: npm run electron:build:mac
            artifact_name: mac-build
            artifact_path: dist-electron/*.dmg

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Bun (for development dependencies)
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: ${{ matrix.build_command }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_path }}
          retention-days: 30

  # Create a release if this is a tag push
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -la artifacts

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/linux-build/*
            artifacts/windows-build/*
            artifacts/mac-build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}